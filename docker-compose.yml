version: '3.8'

services:
  # Supabase Services
  supabase-db:
    image: supabase/postgres:15.1.0.117
    container_name: shahsignals-supabase-db
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
    ports:
      - "54322:5432"
    volumes:
      - ./supabase-project/volumes/db:/var/lib/postgresql/data
      - ./database/supabase/migrations:/docker-entrypoint-initdb.d
    networks:
      - shahsignals-network

  supabase-auth:
    image: supabase/gotrue:v2.132.3
    container_name: shahsignals-supabase-auth
    environment:
      GOTRUE_API_HOST: 0.0.0.0
      GOTRUE_API_PORT: 9999
      GOTRUE_DB_DRIVER: postgres
      GOTRUE_DB_DATABASE_URL: postgres://postgres:postgres@supabase-db:5432/postgres?sslmode=disable
      GOTRUE_SITE_URL: http://localhost:3000
      GOTRUE_URI_ALLOW_LIST: http://localhost:3000,http://localhost:3001,http://localhost:3002,http://localhost:3003,http://localhost:3004,http://localhost:3005
      GOTRUE_DISABLE_SIGNUP: false
      GOTRUE_JWT_SECRET: your-super-secret-jwt-key-change-in-production
      GOTRUE_JWT_EXP: 3600
      GOTRUE_JWT_DEFAULT_GROUP_NAME: authenticated
      GOTRUE_EXTERNAL_GOOGLE_ENABLED: true
      GOTRUE_EXTERNAL_GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOTRUE_EXTERNAL_GOOGLE_SECRET: ${GOOGLE_CLIENT_SECRET}
      GOTRUE_EXTERNAL_GOOGLE_REDIRECT_URI: http://localhost:3001/auth/google/callback
    ports:
      - "9999:9999"
    depends_on:
      - supabase-db
    networks:
      - shahsignals-network

  supabase-rest:
    image: postgrest/postgrest:v11.2.0
    container_name: shahsignals-supabase-rest
    environment:
      PGRST_DB_URI: postgres://postgres:postgres@supabase-db:5432/postgres
      PGRST_DB_SCHEMA: public,storage
      PGRST_DB_ANON_ROLE: anon
      PGRST_JWT_SECRET: your-super-secret-jwt-key-change-in-production
      PGRST_DEFAULT_RLS: 1
    ports:
      - "3000:3000"
    depends_on:
      - supabase-db
    networks:
      - shahsignals-network

  supabase-realtime:
    image: supabase/realtime:v2.25.35
    container_name: shahsignals-supabase-realtime
    environment:
      DB_HOST: supabase-db
      DB_PORT: 5432
      DB_NAME: postgres
      DB_USER: postgres
      DB_PASSWORD: postgres
      PORT: 4000
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
    ports:
      - "4000:4000"
    depends_on:
      - supabase-db
    networks:
      - shahsignals-network

  supabase-storage:
    image: supabase/storage-api:v0.40.4
    container_name: shahsignals-supabase-storage
    environment:
      ANON_KEY: your-supabase-anon-key
      SERVICE_KEY: your-supabase-service-role-key
      PROJECT_REF: shahsignals
      POSTGREST_URL: http://supabase-rest:3000
      PGRST_JWT_SECRET: your-super-secret-jwt-key-change-in-production
      PGOPTIONS: -c search_path=storage,public
      DATABASE_URL: postgres://postgres:postgres@supabase-db:5432/postgres
      FILE_SIZE_LIMIT: 52428800
      STORAGE_BACKEND: file
      FILE_STORAGE_BACKEND_PATH: /var/lib/storage
    ports:
      - "5000:5000"
    volumes:
      - ./supabase-project/volumes/storage:/var/lib/storage
    depends_on:
      - supabase-db
      - supabase-rest
    networks:
      - shahsignals-network

  supabase-dashboard:
    image: supabase/dashboard:20240205-0c7c2d1
    container_name: shahsignals-supabase-dashboard
    environment:
      STUDIO_PG_META_URL: http://supabase-meta:8080
      POSTGRES_PASSWORD: postgres
      DEFAULT_ORGANIZATION_NAME: ShahSignals
      DEFAULT_PROJECT_NAME: ShahSignals
      SUPABASE_URL: http://localhost:54321
      SUPABASE_ANON_KEY: your-supabase-anon-key
      SUPABASE_SERVICE_KEY: your-supabase-service-role-key
    ports:
      - "54323:3000"
    depends_on:
      - supabase-meta
    networks:
      - shahsignals-network

  supabase-meta:
    image: supabase/postgres-meta:v0.68.0
    container_name: shahsignals-supabase-meta
    environment:
      PG_META_PORT: 8080
      PG_META_DB_HOST: supabase-db
      PG_META_DB_PORT: 5432
      PG_META_DB_NAME: postgres
      PG_META_DB_USER: postgres
      PG_META_DB_PASSWORD: postgres
    ports:
      - "8080:8080"
    depends_on:
      - supabase-db
    networks:
      - shahsignals-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: shahsignals-redis
    ports:
      - "6379:6379"
    volumes:
      - ./supabase-project/volumes/redis:/data
    networks:
      - shahsignals-network

  # Microservices
  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    container_name: shahsignals-auth-service
    environment:
      NODE_ENV: development
      PORT: 3001
      SUPABASE_URL: http://supabase-rest:3000
      SUPABASE_ANON_KEY: your-supabase-anon-key
      SUPABASE_SERVICE_ROLE_KEY: your-supabase-service-role-key
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      REDIS_URL: redis://redis:6379
    ports:
      - "3001:3001"
    depends_on:
      - supabase-rest
      - supabase-auth
      - redis
    networks:
      - shahsignals-network
    volumes:
      - ./services/auth-service:/app
      - /app/node_modules

  user-service:
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    container_name: shahsignals-user-service
    environment:
      NODE_ENV: development
      PORT: 3002
      SUPABASE_URL: http://supabase-rest:3000
      SUPABASE_ANON_KEY: your-supabase-anon-key
      SUPABASE_SERVICE_ROLE_KEY: your-supabase-service-role-key
      REDIS_URL: redis://redis:6379
      INTERNAL_API_KEY: your-internal-api-key-for-service-communication
    ports:
      - "3002:3002"
    depends_on:
      - supabase-rest
      - supabase-storage
      - redis
    networks:
      - shahsignals-network
    volumes:
      - ./services/user-service:/app
      - /app/node_modules

  signal-service:
    build:
      context: ./services/signal-service
      dockerfile: Dockerfile
    container_name: shahsignals-signal-service
    environment:
      NODE_ENV: development
      PORT: 3003
      SUPABASE_URL: http://supabase-rest:3000
      SUPABASE_ANON_KEY: your-supabase-anon-key
      SUPABASE_SERVICE_ROLE_KEY: your-supabase-service-role-key
      REDIS_URL: redis://redis:6379
      INTERNAL_API_KEY: your-internal-api-key-for-service-communication
      USER_SERVICE_URL: http://user-service:3002
      PAYMENT_SERVICE_URL: http://payment-service:3004
      NOTIFICATION_SERVICE_URL: http://notification-service:3005
    ports:
      - "3003:3003"
    depends_on:
      - supabase-rest
      - redis
      - user-service
      - payment-service
      - notification-service
    networks:
      - shahsignals-network
    volumes:
      - ./services/signal-service:/app
      - /app/node_modules

  payment-service:
    build:
      context: ./services/payment-service
      dockerfile: Dockerfile
    container_name: shahsignals-payment-service
    environment:
      NODE_ENV: development
      PORT: 3004
      SUPABASE_URL: http://supabase-rest:3000
      SUPABASE_ANON_KEY: your-supabase-anon-key
      SUPABASE_SERVICE_ROLE_KEY: your-supabase-service-role-key
      REDIS_URL: redis://redis:6379
      INTERNAL_API_KEY: your-internal-api-key-for-service-communication
      TRON_API_KEY: ${TRON_API_KEY}
      TRON_API_URL: ${TRON_API_URL}
      ETHEREUM_RPC_URL: ${ETHEREUM_RPC_URL}
      ETHEREUM_PRIVATE_KEY: ${ETHEREUM_PRIVATE_KEY}
    ports:
      - "3004:3004"
    depends_on:
      - supabase-rest
      - redis
    networks:
      - shahsignals-network
    volumes:
      - ./services/payment-service:/app
      - /app/node_modules

  notification-service:
    build:
      context: ./services/notification-service
      dockerfile: Dockerfile
    container_name: shahsignals-notification-service
    environment:
      NODE_ENV: development
      PORT: 3005
      SUPABASE_URL: http://supabase-rest:3000
      SUPABASE_ANON_KEY: your-supabase-anon-key
      SUPABASE_SERVICE_ROLE_KEY: your-supabase-service-role-key
      REDIS_URL: redis://redis:6379
      INTERNAL_API_KEY: your-internal-api-key-for-service-communication
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
    ports:
      - "3005:3005"
    depends_on:
      - supabase-rest
      - redis
    networks:
      - shahsignals-network
    volumes:
      - ./services/notification-service:/app
      - /app/node_modules

  # Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: shahsignals-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./infrastructure/monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./infrastructure/monitoring/prometheus/alerts.yml:/etc/prometheus/alerts.yml
      - ./infrastructure/monitoring/prometheus/rules:/etc/prometheus/rules
      - ./infrastructure/monitoring/prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - shahsignals-network

  grafana:
    image: grafana/grafana:latest
    container_name: shahsignals-grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: false
    volumes:
      - ./infrastructure/monitoring/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./infrastructure/monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./infrastructure/monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./infrastructure/monitoring/grafana/data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - shahsignals-network

networks:
  shahsignals-network:
    driver: bridge

volumes:
  supabase-db-data:
  supabase-storage-data:
  redis-data:
  prometheus-data:
  grafana-data:
